AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VpcId:
    Description: The VPC id
    Type: String
    Default: ""
  VpcCidr:
    Description: The VPC CIDR block
    Type: String
    Default: ""
  PrivateSubnet1:
    Description: The Private Subnet 1 id
    Type: String
    Default: ""
  PrivateSubnet2:
    Description: The Private Subnet 2 id
    Type: String
    Default: ""
  PrivateSubnet3:
    Description: The Private Subnet 3 id
    Type: String
    Default: ""
  NginxImage:
    Description: Container image
    Type: String
    Default: ""
Resources:
  NginxCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      CapacityProviders:
        - FARGATE
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
  NginxTask:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ExecutionRoleArn: !Ref NginxTaskExecRole
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Image: !Ref NginxImage
          Name: Nginx
          PortMappings:
            - ContainerPort: 443
              Protocol: tcp
      Cpu: 1024
      Memory: 2048
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
  NginxService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref NginxCluster
      DesiredCount: 3
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
            SecurityGroups:
                - !Ref NginxSecurityGroup
            Subnets:
                - !Ref PrivateSubnet1
                - !Ref PrivateSubnet2
                - !Ref PrivateSubnet3
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref NginxTask
  NginxSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Nginx Security group
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidr
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: Ingress rule for tcp 443
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
          FromPort: -1
          ToPort: -1
      Tags:
        - Key: Name
          Value: Nginx SG

  NginxTaskExecRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ecs-actions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  -  'ecr:GetAuthorizationToken'
                  -  'ecr:BatchCheckLayerAvailability'
                  -  'ecr:GetDownloadUrlForLayer'
                  -  'ecr:BatchGetImage'
                  -  'logs:CreateLogStream'
                  -  'logs:PutLogEvents'
                Resource: '*'